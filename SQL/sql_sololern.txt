SHOW DATABSE - ПОКАЗАТЬ ВСЕ БАЗЫ ДАННЫХ
SHOW TANLE - ПОКАЗЫВАЕТ ВСЕ ТАБЛИЦЫ В MySQL
SHOW COLUMNS FROM [] - показывывает информацию о столбцах в заданной таблице

Оператор SELECT используется для выбора данных из базы данных.
Результат сохраняется в таблице результатов, которая называется набором результатов.

Запрос может извлекать информацию из выбранных столбцов или из всех столбцов таблицы.
Чтобы создать простую инструкцию SELECT, укажите имя (имена) нужного столбца (столбцов) в таблице.

SELECT column_list
FROM table_name

- column_list включает один или несколько столбцов, из которых извлекаются данные
- table-name — это имя таблицы, из которой извлекается информация

SELECT FirstName FROM customers;
SELECT City FROM customers;

Не забудьте заканчивать каждый оператор SQL точкой с запятой, чтобы указать, что оператор завершен и готов к интерпретации.
В этом руководстве мы будем использовать точку с запятой в конце каждого оператора SQL.

SQL не чувствителен к регистру.

Общепринятой практикой является написание всех команд SQL в верхнем регистре.

Синтаксические правила

Один оператор SQL может быть помещен в одну или несколько строк текста. Кроме того, в одной текстовой строке можно объединить несколько операторов SQL.

Пробелы и несколько строк игнорируются в SQL.

Как упоминалось ранее, оператор SQL SELECT извлекает записи из таблиц в вашей базе данных SQL.

Вы можете выбрать сразу несколько столбцов таблицы.
Просто перечислите имена столбцов, разделенные запятыми

SELECT FirstName, LastName, City 
FROM customers;


Выбор всех столбцов


Чтобы получить всю информацию, содержащуюся в вашей таблице, поместите знак звездочки (*) после команды SELECT, вместо того, чтобы вводить имена каждого столбца отдельно.

SELECT * FROM []

--------------------------
В ситуациях, когда у вас есть несколько повторяющихся записей в таблице, может иметь смысл возвращать только уникальные записи, а не извлекать дубликаты.

Ключевое слово SQL DISTINCT используется в сочетании с SELECT для устранения всех повторяющихся записей и возврата только уникальных.

SELECT DISTINCT column_name1, column_name2
FROM table_name;

Ключевое слово DISTINCT извлекает только уникальные значения.

-------------------------------------------------------------

По умолчанию возвращаются все результаты, удовлетворяющие условиям, указанным в операторе SQL. Однако иногда нам нужно получить только подмножество записей. 
В MySQL это достигается с помощью ключевого слова LIMIT.

SELECT column list
FROM table_name
LIMIT [number of records];

Вы также можете выбрать набор записей из определенного смещения.
В следующем примере мы выбираем четыре записи, начиная с третьей позиции:

SELECT []
FROM[] OFSET 3 LIMIT 4;

Причина того, что он выдает результаты, начиная с идентификатора номер четыре, а не три, заключается в том, что MySQL начинает отсчет с нуля, а это означает, 
что смещение первой строки равно 0, а не 1.

--------------------------------------------------------------
Полные имена


В SQL вы можете указать имя таблицы перед именем столбца, разделив их точкой.

SELECT City FROM customers;

SELECT customers.City FROM customers;

Термин для вышеупомянутого синтаксиса называется «полным именем» этого столбца.
Эта форма записи особенно полезна при работе с несколькими таблицами, которые могут иметь одинаковые имена столбцов.

---------------------------------------------------------------------

ORDER BY используется с SELECT для сортировки возвращаемых данных.

В следующем примере наша таблица клиентов сортируется по столбцу FirstName.
SELECT * FROM []
ORDER BY []

Как видите, строки упорядочены в алфавитном порядке по столбцу FirstName.
По умолчанию ключевое слово ORDER BY сортирует результаты в порядке возрастания.

ORDER BY может сортировать полученные данные по нескольким столбцам. При использовании ORDER BY с более чем одним столбцом разделите список столбцов запятыми после ORDER BY.

Команда ORDER BY начинает упорядочивать в той же последовательности, что и столбцы. Он будет упорядочен по первому столбцу в списке, затем по второму и так далее.

------------------------------------------------------------------------------

WHERE используется для извлечения только тех записей, которые соответствуют указанному критерию.
Синтаксис предложения WHERE:

SELECT []
FROM []
WHERE []

SELECT * FROM []
WHERE [ID =7];

WHERE используется для извлечения только тех записей, которые соответствуют указанному критерию.


__________________________________________________________________________________________

BETWEEN Operator

Оператор BETWEEN выбирает значения в диапазоне. Первое значение должно быть нижней границей, а второе значение — верхней границей.

Синтаксис предложения BETWEEN следующий:

SELECT column_name(s)
FROM table_name
WHERE column_name BETWEEN value1 AND value2;

нижняя граница и верхняя граница включены в диапазон.

-------------------------------------------------------------
Текстовые значения


При работе с текстовыми столбцами заключайте любой текст, который появляется в операторе, в одинарные кавычки (').

Следующая инструкция SQL выбирает все записи, в которых город равен «Нью-Йорк».

сли ваш текст содержит апостроф (одинарную кавычку), вы должны использовать два символа одинарной кавычки, чтобы избежать апострофа. 
Например: 'Can''t'.

-----------------------------------------------------------------------

Logical Operators


Логические операторы можно использовать для объединения двух логических значений и возврата результата true, false или null.
Можно использовать следующие операторы:

AND Выражение вида a AND b будет равно true только тогда, когда и а и b равны true.
OR  Выражение a OR b будет равно true, когда или a, или b (или оба) равен true.
IN  TRUE, если операнд содержится в заданном списке выражений.
NOT Меняет значение оператора типа Boolean на противоположное.

При извлечении данных с помощью оператора SELECT используйте логические операторы в предложении WHERE для объединения нескольких условий.

Если вы хотите выбрать строки, удовлетворяющие всем заданным условиям, используйте логический оператор AND.

Вы можете комбинировать столько условий, сколько необходимо для получения желаемых результатов.

-----------------------------------------------------------------------------

OR 

Если вы хотите выбрать строки, которые удовлетворяют хотя бы одному из заданных условий, вы можете использовать логический оператор ИЛИ.

В следующей таблице описано, как работает логический оператор ИЛИ:

-------------------------------------------------------------------
Combining AND & OR

Условия SQL AND и OR можно комбинировать для проверки нескольких условий в запросе.
Эти два оператора называются конъюнктивными операторами.

При объединении этих условий важно использовать круглые скобки, чтобы был известен порядок оценки каждого условия.

 

